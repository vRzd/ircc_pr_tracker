name: Docker CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install Poetry
        run: pip install poetry

      - name: Disable Poetry Virtual Environments
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --no-root

      - name: Install Google Chrome & Chromedriver (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl gnupg2 libnss3 libxss1 libappindicator3-1 xdg-utils libgbm1 libasound2t64
          sudo apt-get install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
          CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          wget -q -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
          rm /tmp/chromedriver.zip
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Verify Chrome & Chromedriver Installation
        run: |
          google-chrome --version
          chromedriver --version

      - name: Verify PyYAML Installation in GHA
        run: poetry run python -c "import yaml; print('✅ PyYAML is installed in GitHub Actions!')"

      - name: Build Docker image
        run: docker build -t ircc-pr-tracker .

      - name: Verify Chrome & Chromedriver Inside Docker
        run: docker run --rm ircc-pr-tracker google-chrome --version && docker run --rm ircc-pr-tracker chromedriver --version

      - name: Verify PyYAML Installation Inside Docker
        run: docker run --rm ircc-pr-tracker python -c "import yaml; print('✅ PyYAML is installed inside Docker!')"

      - name: Run container (dry run)
        run: docker run --rm ircc-pr-tracker
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_IDS: ${{ secrets.CHAT_IDS }}
          UCI: ${{ secrets.UCI }}
          PASSWORD: ${{ secrets.PASSWORD }}
